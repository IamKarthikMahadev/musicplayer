// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#include "playerProxy.h"
#include "MusicPlayer.h"
#include <iostream>
#include <string>
#include "MusicPlayerHandler.h"
#include "Common.h"
#include "MessageHelper.h"


const std::string SUCCESS = "success";
const std::string FAILED =  "failed";

// Create a music player
// Create queue
// Write a queue monitor
// Read from queue



void StartMusicPlayer()
{
    pthread_t tID;
    int tErr, tArg;

    // prepare the test argument
    tArg = 5120;

    // create a pthread
    tErr = pthread_create(&tID, NULL, MusicPlayer::MusicPlayerHandlerThread, &tArg);

}

playerProxy::playerProxy()
{
    StartMusicPlayer();
}

std::string playerProxy::Play()
{
    
    if(MessageHelper::SendMessage(MessageType::Play))
    {
        return SUCCESS;
    }
    return FAILED;
}

std::string playerProxy::Pause()
{
    if(MessageHelper::SendMessage(MessageType::Pause))
    {
        return SUCCESS;
    }
    return FAILED;
}

std::string playerProxy::Next()
{
    if(MessageHelper::SendMessage(MessageType::Next))
    {
        return SUCCESS;
    }
    return FAILED;
    
}
std::string playerProxy::Prev()
{
    if(MessageHelper::SendMessage(MessageType::Prev))
    {
        return SUCCESS;
    }
    return FAILED;
}
