// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#include "playerProxy.h"
#include "MusicPlayer.h"
#include <iostream>
#include <string>
const std::string SUCCESS = "success";
const std::string FAILED =  "failed";

#import <pthread.h>
#import <stdlib.h>
#import <stdio.h>

void *DoTask(int *anArg)
{
    int tArg;
    
    // retrieve the thread argument
    tArg = *anArg;
    //printf("DoTask:input:argument:%d\n", tArg);
    FILE * pFile;
    pFile = fopen ("./myfile.txt","w");
    if (pFile!=NULL)
    {
        fputs ("fopen example",pFile);
        fclose (pFile);
    }
   
    
    //
    // RUN THE REST OF THE TASK...
    //
}

void ThreadCreate()
{
    pthread_t *tID;
    int tErr, tArg;
    
    // prepare the test argument
    tArg = 5120;
    
    // create a pthread
    tErr = pthread_create(tID, NULL, DoTask, &tArg);
    
    // dispose all threads
    pthread_exit(NULL);
}

playerProxy::playerProxy()
{
    //ThreadCreate();
    
}
std::string playerProxy::AddToPlayList(const std::string& song)
{
    if(OSXMusicPlayer::Inst().AddToPlayList(song))
    {
        return SUCCESS;
    }
    return FAILED;

}

std::string playerProxy::RemoveFromPlayList(const std::string& song)
{
    if(OSXMusicPlayer::Inst().RemoveFromPlayList(song))
    {
        return SUCCESS;
    }
    return FAILED;
    
}

std::string playerProxy::Play()
{
    if(OSXMusicPlayer::Inst().Play())
    {
        return SUCCESS;
    }
    return FAILED;
}

std::string playerProxy::Pause()
{
    if(OSXMusicPlayer::Inst().Pause())
    {
        return SUCCESS;
    }
    return FAILED;
}

std::string playerProxy::Next()
{
    if(OSXMusicPlayer::Inst().Next())
    {
        return SUCCESS;
    }
    return FAILED;
    
}
std::string playerProxy::Prev()
{
    if(OSXMusicPlayer::Inst().Prev())
    {
        return SUCCESS;
    }
    return FAILED;
}

std::string playerProxy::GetCurrSong()
{
    return OSXMusicPlayer::Inst().GetCurrentSong();

}
